[package]
name = "schemars"
description = "Generate JSON Schemas from Rust code"
homepage = "https://graham.cool/schemars/"
repository = "https://github.com/GREsau/schemars"
version = "0.8.8"
authors = ["Graham Esau <gesau@hotmail.co.uk>"]
edition = "2018"
license = "MIT"
readme = "README.md"
keywords = ["rust", "json-schema", "serde"]
categories = ["encoding"]
build = "build.rs"

[dependencies]
schemars_derive = { version = "=0.8.8", optional = true, path = "../schemars_derive" }
serde = { version = "1.0.136", features = ["derive"] }
serde_json = "1.0.79"
dyn-clone = "1.0.5"

chrono = { version = "0.4.19", default-features = false, optional = true }
indexmap = { version = "1.6.2", features = ["serde-1"], optional = true }
either = { version = "1.6.1", default-features = false, optional = true }
uuid = { version = "1.0.0", default-features = false, optional = true }
smallvec = { version = "1.8.0", optional = true }
arrayvec = { version = "0.7.2", default-features = false, optional = true }
url = { version = "2.2.2", default-features = false, optional = true }
bytes = { version = "1.1.0", optional = true }
rust_decimal = { version = "1.23.1", default-features = false, optional = true }
bigdecimal = { version = "0.3.0", default-features = false, optional = true }
enumset = { version = "1.0.11", optional = true }

[dev-dependencies]
pretty_assertions = "1.2.1"
trybuild = "1.0.60"

[features]
default = ["derive"]

derive = ["schemars_derive"]

# Use a different representation for the map type of Schemars.
# This allows data to be read into a Value and written back to a JSON string
# while preserving the order of map keys in the input.
preserve_order = ["indexmap"]

impl_json_schema = ["derive"]
# derive_json_schema will be removed in a later version
derive_json_schema = ["impl_json_schema"]

ui_test = []

[[test]]
name = "chrono"
required-features = ["chrono"]

[[test]]
name = "indexmap"
required-features = ["indexmap"]

[[test]]
name = "either"
required-features = ["either"]

[[test]]
name = "uuid"
required-features = ["uuid"]

[[test]]
name = "smallvec"
required-features = ["smallvec"]

[[test]]
name = "bytes"
required-features = ["bytes"]

[[test]]
name = "arrayvec"
required-features = ["arrayvec"]

[[test]]
name = "schema_for_schema"
required-features = ["impl_json_schema"]

[[test]]
name = "ui"
required-features = ["ui_test"]

[[test]]
name = "url"
required-features = ["url"]

[[test]]
name = "enumset"
required-features = ["enumset"]

[package.metadata.docs.rs]
all-features = true
